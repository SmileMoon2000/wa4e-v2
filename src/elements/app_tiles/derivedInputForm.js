import { html } from 'lit';
import { TileBase } from './tileBase';

class derivedInputTile extends TileBase {
  render() {
    this.formFields = this.appConf.fields;
    this.derivedInputFields = this.makeFields();
    return [
      super.render(),
      html`
        <!-- This 'div' defines the tile as a grid item and the style options
      defines the corners of the tile on the grid. -->
        <div>
          <h2>${this.appConf.title}</h2>
          <!-- input form autogenerated fields -->
          ${this.derivedInputFields}
        </div>
      `,
    ];
  }

  makeFields() {
    return html`<div>
      ${Object.keys(this.formFields).map(
        key =>
          html` <div class="input-group">
            <label class="input-group-text col-3" for=${key}
              >${html([key])}</label
            >
            <input
              class="form-control col-6 bg-light"
              type="text"
              disabled
              id=${key}
              .value=${this.formFields[key][0]}
            />
            <label class="input-group-text col-3" for=${key}
              >${html([this.formFields[key][1]])}</label
            >
          </div>`
      )}
    </div>`;
  }
}

customElements.define('derived-input-tile', derivedInputTile);
